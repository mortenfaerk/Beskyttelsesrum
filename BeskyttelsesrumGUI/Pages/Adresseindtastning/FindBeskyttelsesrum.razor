@using BeskyttelsesrumGUI.Pages.Adresseindtastning.Components;
@using BeskyttelsesrumGUI.Models;
@using BeskyttelsesrumGUI.Services;
@inject BeskyttelsesrumService _beskyttelsesrumService;


        <AdresseIndtastning @ref="@AdresseIndtastning" AdresseChanged="@HandleAddress"/>
<label for="rangeInput">Radius:</label>
<br />
<div class="d-flex flex-row mb-3">
        <RangeInput TValue="int" id="rangeInput" @bind-Value="range" Min="1" Max="50" />
    <Badge Color="BadgeColor.Primary" Class="ms-2" VisuallyHiddenText="amount1" ValueChanged="@TryToUpdateList()">@range Km</Badge>
</div>
@if(Beskyttelsesrum != null)
{
 <Grid
     TItem="BbrBeskyttelsesrum"
     Class="table table-hover table-bordered table-striped"
     AllowPaging="true"
     PageSize="10"
     Responsive="true"
     Data="@Beskyttelsesrum"
     AllowSorting="true"
 >

    <GridColumns>
     <GridColumn TItem="BbrBeskyttelsesrum" HeaderText="Adresse" PropertyName="Adresse" SortKeySelector="item => item.Adresse">
     @context.Adresse
            </GridColumn>
      <GridColumn TItem="BbrBeskyttelsesrum" HeaderText="Antal pladser" PropertyName="SikringsrumAnt" SortKeySelector="item => item.SikringsrumAnt">
      @context.SikringsrumAnt
            </GridColumn>
 </GridColumns>
    </Grid>
    
}
@code {
    private AdresseIndtastning AdresseIndtastning = default!;
    private DAWAAdress? Adresse;
    private IEnumerable<BbrBeskyttelsesrum>? Beskyttelsesrum;
    private HashSet<BbrBeskyttelsesrum> selectedBeskyttelsesrum = new();
    private int _selectedRange = 5;
    private int range
    {
        get => _selectedRange;
        set
        {
            _selectedRange = value;
            TryToUpdateList();
        }
    }
    protected override async Task OnInitializedAsync()
    {

    }
    private async Task TryToUpdateList(){
        if (Adresse != null)
        {
            Beskyttelsesrum = await _beskyttelsesrumService.GetBeskyttelsesrumsAsync(Adresse, _selectedRange * 1000);
        }
    }
    private async Task HandleAddress(DAWAAdress adresse)
    {
        Adresse = adresse;
        await TryToUpdateList();
    }
}
